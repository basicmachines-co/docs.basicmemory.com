---
// Extract headings from the current page
// We'll use a client-side script to dynamically generate the TOC
---

<aside class="hidden xl:block w-64 flex-shrink-0">
  <div class="sticky top-20 h-[calc(100vh-5rem)] overflow-y-auto py-6 pl-6">
    <div class="space-y-3">
      <div class="flex items-center gap-2 text-sm font-medium text-gray-900">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
        </svg>
        <span>On this page</span>
      </div>
      <nav>
        <ul id="toc-list" class="space-y-1 text-sm">
          <!-- TOC items will be dynamically generated -->
        </ul>
      </nav>
    </div>
  </div>
</aside>

<script>
  function generateTOC() {
    const tocList = document.getElementById('toc-list');
    if (!tocList) return;

    // Find all headings h2 and h3 in the main content
    const headings = document.querySelectorAll('main h2, main h3');
    
    // Clear existing TOC
    tocList.innerHTML = '';
    
    // If no headings found, hide the TOC
    if (headings.length === 0) {
      const aside = document.querySelector('aside:has(#toc-list)');
      if (aside) aside.style.display = 'none';
      return;
    }
    
    // Generate TOC items
    headings.forEach((heading) => {
      const level = parseInt(heading.tagName.substring(1)); // h2 -> 2, h3 -> 3
      const id = heading.id || heading.textContent?.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '');
      const title = heading.textContent || '';
      
      // Set id if not already set
      if (!heading.id && id) {
        heading.id = id;
      }
      
      // Create TOC item
      const li = document.createElement('li');
      li.className = level === 3 ? 'ml-4' : '';
      
      const a = document.createElement('a');
      a.href = `#${id}`;
      a.className = 'block py-1 text-gray-600 hover:text-gray-900 transition-colors';
      a.style.textDecoration = 'none';
      a.textContent = title;
      
      li.appendChild(a);
      tocList.appendChild(li);
    });
  }
  
  // Generate TOC when page loads
  document.addEventListener('DOMContentLoaded', generateTOC);
  
  // Re-generate TOC if content changes (for SPA navigation)
  document.addEventListener('astro:page-load', generateTOC);
</script>